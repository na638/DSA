#include <stdio.h>
#include <stdbool.h>

void initialize(unsigned char *set) {
    *set = 0;
}

void insert(unsigned char *set, int element) {
    if (element >= 0 && element < 8)
        *set |= (1 << element);
}

void delete(unsigned char *set, int element) {
    if (element >= 0 && element < 8)
        *set &= ~(1 << element);
}

bool find(unsigned char set, int element) {
    if (element >= 0 && element < 8)
        return set & (1 << element);
    return false;
}

unsigned char set_union(unsigned char A, unsigned char B) {
    return A | B;
}

unsigned char intersection(unsigned char A, unsigned char B) {
    return A & B;
}

unsigned char difference(unsigned char A, unsigned char B) {
    return A & ~B;
}

void display(unsigned char set) {
    printf("{");
    int first = 1;
    for (int i = 0; i < 8; i++) {
        if (set & (1 << i)) {
            if (!first) printf(", ");
            printf("%d", i);
            first = 0;
        }
    }
    printf("}\n");
}

int main() {
    unsigned char A, B, C;
    initialize(&A);
    insert(&A, 1);
    insert(&A, 6);
    printf("A = "); display(A);
    initialize(&B);
    insert(&B, 3);
    insert(&B, 6);
    insert(&B, 7);
    printf("B = "); display(B);
    C = set_union(A, B);
    printf("Union: "); display(C);
    C = intersection(A, B);
    printf("Intersection: "); display(C);
    C = difference(A, B);
    printf("Difference: "); display(C);
    delete(&A, 6);
    printf("A after delete(6): "); display(A);
    printf("Find 1 in A: %s\n", find(A, 1) ? "true" : "false");
    printf("Find 6 in A: %s\n", find(A, 6) ? "true" : "false");
    return 0;
}
